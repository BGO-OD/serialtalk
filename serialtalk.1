.TH serialtalk 1 "2 May 2016" "version 1.0"
.SH NAME
serialtalk - command line tool for talking to serial devices
.SH SYNOPSIS
serialtalk [options] device
.SH DESCRIPTION
serialtalk opens a serial device which must be given on the command line
and allows to send characters to that device and receive them fro there.
The communication parameters can be configures entirely using command line
options, there are no config files involved.

After opening and configuring the device the programs waits for characters
to be arrive from stdin, which are then transferred to the device and vice
versa. When using canonical mode (default) the characters typed will only
be seen by the program at the newline, to send each character immediately
use the -n option for non-canonical mode.
To exit again from the program use a SIGINT, i.e. ctrl-c.

As there is no history to the stuff read from stdin it might be useful
to use the readline wrapper rlwrap around this program.

.SH OPTIONS
Default values for each option are given in brackets.
.IP	"-b number"
set baud rate (9600)
.IP "-o number"
set output baud rate (0) 0: the same as input

available: 0, 50, 75, 110, 134, 150, 200, 300, 600, 1200, 1800, 2400, 4800, 9600 (default), 19200, 57600, 115200, 230400, 500000, 576000, 921600, 1000000, 1152000, 1500000, 2000000, 2500000, 3000000, 3500000, 4000000

For input=output baud rate, non-POSIX baud rates are supported.
.IP "-t number"
set poll timeout in milliseconds (-1)
0 means no loop, negative is for ever
.IP "-B number"
set number of bits, must be 5,6,7, or 8   (8)
.IP -s
show state after timeout, needs timeout value! (no)
.IP -v
be verbose, show parameters (0)
.IP -d
clear DTR line (no)
.IP -D
set   DTR line (no)
.IP -r
clear RTS line (no)
.IP -R
set   RTS line (no)
.IP -c
clear CTS line (no)
.IP -C
set   CTS line (no)
.IP -p
enable odd parity (default: none)
.IP -P
enable even parity
.IP -S
set stop bits to 2 or 1.5 instead of 1
.IP -n
non-canonical stdin, read immediately (not at newline) (no, canonical)
.IP -N
no local echo for typed characters (no, do echo)
.IP -k
send ctrl-c and exit (no)
.IP -T
print time stamps (no)
.IP -x
translate nl to cr nl (from terminal to device) (no)
.IP -X
translate nl to cr (from terminal to device) (no)
.IP -y
translate cr to cr nl (from device to terminal) (no)
.IP -Y
translate cr to nl (from device to terminal) (no)
.IP -H
do HUPCL (lower control lines after close) (no)
.IP "-w number"
wait number milliseconds after end of stdin before close (0)
.IP "-l port"
listen on port port for TCP connections and use them instead of stdin/stdout (0)
.IP -f
fork into a demonic life (no)
.IP -h
this help

.SH BUGS
When using the -l option to listen to a network port there is no security mechanism,
i.e. anyone who can access that port could send malicious commands.
This option should only be used in well-firewalled networks with trusted users.
.SH AUTHOR
Juergen Hannappel   juergen@juergen-hannappel.de
.SH SEE ALSO
rlwrap
